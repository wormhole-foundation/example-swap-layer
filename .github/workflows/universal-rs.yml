name: universal-rs

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test ${{ matrix.rust }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "beta", "nightly", "1.75"] # MSRV
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - name: test
        run: cargo test --all-features
        working-directory: ./universal/rs

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@clippy
      - run: cargo clippy --all-targets --all-features
        working-directory: ./universal/rs
        env:
          RUSTFLAGS: -Dwarnings

  docs:
    name: docs
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - run: cargo doc --no-deps --document-private-items
        working-directory: ./universal/rs
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all --check
        working-directory: ./universal/rs